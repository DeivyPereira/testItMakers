{"version":3,"sources":["dashboard/dashboard.js","problemOne/Message.js","problemTwo/FocusableInput.js","problemTwo/TextInput.js","problemThree/TodoList.js","problemFour/reducer.js","problemFour/Greeter.js","problemFour/ProviderHome.js","problemFive/problemFive.js","problemSix/problemSix.js","App.js","serviceWorker.js","index.js"],"names":["dashboard","to","Component","Message","state","visibility","toggleVisibility","setState","onClick","this","FocusableInput","focused","props","e","current","focus","TextInput","refInput","React","createRef","ref","placeholder","TodoList","items","text","done","onDoneItem","index","data","map","item","key","disabled","type","userReducer","action","Greeter","name","handleChange","target","value","handleEdit","console","log","dispatch","onChange","connect","store","createStore","ProviderHome","problemFive","symmetry","SearchSymmetry","ar","split","trim","half1","splice","length","half2","result","filter","x","includes","rows","cols","problemSix","App","className","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f8fd7007.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport {  Link } from \"react-router-dom\";\r\nexport default class dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/problemone\"><h2>Problema 1</h2></Link>\r\n                <Link to=\"/problemtwo\"><h2>Problema 2</h2></Link>\r\n                <Link to=\"/problemthree\"><h2>Problema 3</h2></Link>\r\n                <Link to=\"/problemfour\"><h2>Problema 4</h2></Link>\r\n                <Link to=\"/problemfive\"><h2>Problema 5</h2></Link>\r\n                <Link to=\"/problemsix\"><h2>Problema 6</h2></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nexport default class Message extends Component {\r\n    state = { visibility: false };\r\n    toggleVisibility = () => {\r\n        this.setState({\r\n            visibility: !this.state.visibility\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <a onClick={this.toggleVisibility}>\r\n                    {this.state.visibility ? 'Mostrar' : 'Ocultar'}\r\n                </a>\r\n                <hr />\r\n                {!this.state.visibility &&\r\n                    <h1>Hola Mundo</h1>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class FocusableInput extends Component {\r\n    render() {\r\n        var focused = this.props.focused;\r\n        return (\r\n            <div onClick={e => focused.current.focus()}>\r\n                    Focus Input\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport FocusableInput from './FocusableInput'\r\n\r\nexport default class TextInput  extends Component {\r\n    render() {\r\n        var refInput = React.createRef();\r\n        return (\r\n            <div>\r\n                <FocusableInput focused={refInput}/>\r\n                <input ref={refInput} placeholder=\"Ingresa tu nombre y apellido\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TodoList extends Component {\r\n    state = {\r\n        items: [\r\n            { text: 'Problema 1', done: false },\r\n            { text: 'Problema 2', done: false },\r\n            { text: 'Problema 3', done: false },\r\n            { text: 'Problema 4', done: false },\r\n            { text: 'Problema 5', done: true },\r\n            { text: 'Problema 6', done: false }\r\n        ],\r\n    };\r\n    onDoneItem = (index, state) => {\r\n        let data = this.state.items\r\n        data[index].done = state == false ? true : false;\r\n        this.setState({items: data});\r\n    }\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.state.items.map((item, index) => (\r\n                    <li key={index}>\r\n                        {item.text}\r\n                        <button\r\n                            disabled={item.done}\r\n                            type=\"button\"\r\n                            onClick={() => this.onDoneItem(index, item.done)}\r\n                        >\r\n                            Finalizar\r\n                         </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","const userReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n      case 'CHANGE_NAME':\r\n        state = action.data;\r\n        return state\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  export default userReducer;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nclass Greeter extends Component {\r\n  state = {\r\n    name: ''\r\n  };\r\n  handleChange = (e) =>{ \r\n    this.setState({name: e.target.value});\r\n  }\r\n  handleEdit = () => {\r\n    console.log(this.state.name) \r\n    this.props.dispatch({ type: 'CHANGE_NAME', data: this.state.name })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <small>Escribe el nombre el deseas que saludemos.</small><br/>\r\n         <input type=\"text\" value={this.state.name} onChange={this.handleChange} /><br/>\r\n         <button onClick={this.handleEdit}>Actualizar Nombre</button>\r\n         <hr/>\r\n         Hola {this.props.name}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      name: state\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Greeter);","import React, { Component, useState } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport userReducer from './reducer'\r\nimport { createStore } from 'redux'\r\nimport Greeter from './Greeter'\r\n\r\nconst store = createStore(userReducer);\r\n\r\nfunction ProviderHome() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Greeter/>\r\n    </Provider>\r\n  );\r\n}\r\nexport default ProviderHome","import React, { Component } from 'react'\r\n\r\nexport default class problemFive extends Component {\r\n    state = { \r\n        text: ['a', 'b', 'c', 'd', 'd', 'c', 'b', 'a'],\r\n        symmetry:''\r\n    };\r\n    SearchSymmetry = (e) => {\r\n        let state = e.target.value\r\n        var ar = state.split(\",\").map(function(item) {\r\n            return item.trim();\r\n        });\r\n        let half1 = ar.splice(0,ar.length/2)\r\n        let half2 = ar.splice(0,ar.length)\r\n        var result =  [\r\n            ...half1.filter(x => !half2.includes(x)),\r\n            ...half2.filter(x => !half1.includes(x))\r\n        ];\r\n        this.setState({\r\n            symmetry: result,\r\n            text: state\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Escribe una cadena separada por comas en el siguiente recuadro para comprobar si es simetrico o no</p>\r\n                <p><small>Ejemplo:</small> a,b,c,c,b,a (Simetrico)</p>\r\n                <p><small>Ejemplo:</small> a,b,c,d,b,a (Asimetrico)</p>\r\n                <hr/>\r\n                <textarea onChange={this.SearchSymmetry} rows=\"5\" cols=\"50\"> </textarea>\r\n                <hr/>\r\n                {this.state.symmetry =='' ? 'Symmetric' : 'Asymmetric'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class problemSix extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Problema 6\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport dashboard from './dashboard/dashboard'\nimport Message from './problemOne/Message'\nimport TextInput from './problemTwo/TextInput'\nimport TodoList from './problemThree/TodoList'\nimport ProviderHome from './problemFour/ProviderHome'\nimport problemFive from './problemFive/problemFive'\nimport problemSix from './problemSix/problemSix'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Switch>\n            <Route path=\"/problemone\" component={Message} />\n            <Route path=\"/problemtwo\" component={TextInput} />\n            <Route path=\"/problemthree\" component={TodoList} />\n            <Route path=\"/problemfour\" component={ProviderHome} />\n            <Route path=\"/problemfive\" component={problemFive} />\n            <Route path=\"/problemsix\" component={problemSix} />\n            <Route path=\"/\" component={dashboard} />\n          </Switch>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}